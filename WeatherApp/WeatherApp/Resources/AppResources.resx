<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About Our Weather App</value>
  </data>
  <data name="AboutMenu" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="About_Info" xml:space="preserve">
    <value>Welcome to our weather app, your go-to destination for up-to-date weather information! Our app is designed to provide you with accurate and reliable weather forecasts, making it easier for you to plan your day, week, or even the next 24 hours.</value>
  </data>
  <data name="broken clouds" xml:space="preserve">
    <value>broken clouds</value>
  </data>
  <data name="clear sky" xml:space="preserve">
    <value>clear sky</value>
  </data>
  <data name="Days6Menu" xml:space="preserve">
    <value>6 Days Weather</value>
  </data>
  <data name="drizzle" xml:space="preserve">
    <value>drizzle</value>
  </data>
  <data name="drizzle rain" xml:space="preserve">
    <value>drizzle rain</value>
  </data>
  <data name="dust" xml:space="preserve">
    <value>dust</value>
  </data>
  <data name="dust whirls" xml:space="preserve">
    <value>dust whirls</value>
  </data>
  <data name="extreme rain" xml:space="preserve">
    <value>extreme rain</value>
  </data>
  <data name="few clouds" xml:space="preserve">
    <value>few clouds</value>
  </data>
  <data name="fog" xml:space="preserve">
    <value>fog</value>
  </data>
  <data name="freezing rain" xml:space="preserve">
    <value>freezing rain</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="haze" xml:space="preserve">
    <value>haze</value>
  </data>
  <data name="heavy intensity drizzle" xml:space="preserve">
    <value>heavy intensity drizzle</value>
  </data>
  <data name="heavy intensity drizzle rain" xml:space="preserve">
    <value>heavy intensity drizzle rain</value>
  </data>
  <data name="heavy intensity shower rain" xml:space="preserve">
    <value>heavy intensity shower rain</value>
  </data>
  <data name="heavy shower rain and drizzle" xml:space="preserve">
    <value>heavy shower rain and drizzle</value>
  </data>
  <data name="heavy shower snow" xml:space="preserve">
    <value>heavy shower snow</value>
  </data>
  <data name="heavy snow" xml:space="preserve">
    <value>heavy snow</value>
  </data>
  <data name="heavy thunderstorm" xml:space="preserve">
    <value>heavy thunderstorm</value>
  </data>
  <data name="HomeMenu" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Hours24Menu" xml:space="preserve">
    <value>24 Hours Weather</value>
  </data>
  <data name="Humidity" xml:space="preserve">
    <value>Humidity</value>
  </data>
  <data name="light intensity drizzle" xml:space="preserve">
    <value>light intensity drizzle</value>
  </data>
  <data name="light intensity drizzle rain" xml:space="preserve">
    <value>light intensity drizzle rain</value>
  </data>
  <data name="light rain" xml:space="preserve">
    <value>light rain</value>
  </data>
  <data name="light rain and snow" xml:space="preserve">
    <value>light rain and snow</value>
  </data>
  <data name="light shower sleet" xml:space="preserve">
    <value>light shower sleet</value>
  </data>
  <data name="light shower snow" xml:space="preserve">
    <value>light shower snow</value>
  </data>
  <data name="light snow" xml:space="preserve">
    <value>light snow</value>
  </data>
  <data name="light thunderstorm" xml:space="preserve">
    <value>light thunderstorm</value>
  </data>
  <data name="mist" xml:space="preserve">
    <value>mist</value>
  </data>
  <data name="moderate rain" xml:space="preserve">
    <value>moderate rain</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="overcast clouds" xml:space="preserve">
    <value>overcast clouds</value>
  </data>
  <data name="Pressure" xml:space="preserve">
    <value>Pressure</value>
  </data>
  <data name="ragged shower rain" xml:space="preserve">
    <value>ragged shower rain</value>
  </data>
  <data name="ragged thunderstorm" xml:space="preserve">
    <value>ragged thunderstorm</value>
  </data>
  <data name="rain" xml:space="preserve">
    <value>rain</value>
  </data>
  <data name="rain and snow" xml:space="preserve">
    <value>rain and snow</value>
  </data>
  <data name="sand" xml:space="preserve">
    <value>sand</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="scattered clouds" xml:space="preserve">
    <value>scattered clouds</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select Language</value>
  </data>
  <data name="SettingsMenu" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="shower drizzle" xml:space="preserve">
    <value>shower drizzle</value>
  </data>
  <data name="shower rain" xml:space="preserve">
    <value>shower rain</value>
  </data>
  <data name="shower rain and drizzle" xml:space="preserve">
    <value>shower rain and drizzle</value>
  </data>
  <data name="shower sleet" xml:space="preserve">
    <value>shower sleet</value>
  </data>
  <data name="shower snow" xml:space="preserve">
    <value>shower snow</value>
  </data>
  <data name="sleet" xml:space="preserve">
    <value>sleet</value>
  </data>
  <data name="smoke" xml:space="preserve">
    <value>smoke</value>
  </data>
  <data name="snow" xml:space="preserve">
    <value>snow</value>
  </data>
  <data name="squall" xml:space="preserve">
    <value>squalls</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="thunderstorm" xml:space="preserve">
    <value>thunderstorm</value>
  </data>
  <data name="thunderstorm with drizzle" xml:space="preserve">
    <value>thunderstorm with drizzle</value>
  </data>
  <data name="thunderstorm with heavy drizzle" xml:space="preserve">
    <value>thunderstorm with heavy drizzle</value>
  </data>
  <data name="thunderstorm with heavy rain" xml:space="preserve">
    <value>thunderstorm with heavy rain</value>
  </data>
  <data name="thunderstorm with light drizzle" xml:space="preserve">
    <value>thunderstorm with light drizzle</value>
  </data>
  <data name="thunderstorm with light rain" xml:space="preserve">
    <value>thunderstorm with light rain</value>
  </data>
  <data name="thunderstorm with rain" xml:space="preserve">
    <value>thunderstorm with rain</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>WeatherApp</value>
  </data>
  <data name="tornado" xml:space="preserve">
    <value>tornado</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="very heavy rain" xml:space="preserve">
    <value>very heavy rain</value>
  </data>
  <data name="volcanic ash" xml:space="preserve">
    <value>volcanic ash</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Wind" xml:space="preserve">
    <value>Wind</value>
  </data>
</root>